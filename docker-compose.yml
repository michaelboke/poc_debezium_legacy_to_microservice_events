version: '3.5'

services:
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
#    volumes:
#      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-net

  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
#    volumes:
#      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://localhost:9092,DOCKER://kafka:29092
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,DOCKER://kafka:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - kafka-net
    depends_on:
      - zookeeper

  db:
    image: mysql:5.7
    command: ["mysqld", "--log-bin=mysql-bin", "--server-id=1"]
    environment:
      - MYSQL_DATABASE=kafka_demo
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test
    ports:
      - "3306:3306"
    networks:
      - kafka-net

  connect:
    image: debezium/connect:1.0
    ports:
      - 8083:8083
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - kafka-net

#volumes:
#  zookeeper_data:
#    driver: local
#  kafka_data:
#    driver: local

networks:
  kafka-net:
    driver: bridge
